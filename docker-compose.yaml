services:
  protx-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: protx-dev
    restart: unless-stopped
    volumes:
      - ./output:/app/output
      - ./wandb:/app/wandb
      - ./logs:/app/logs
      - ./.dvc:/app/.dvc
      - ./params.yaml:/app/params.yaml
      - ./dvc.yaml:/app/dvc.yaml
      - ./src:/app/src
    environment:
      - WANDB_API_KEY=${WANDB_API_KEY}
      - DVC_CACHE_DIR=/app/.dvc/cache
    # GPU configuration (uncomment for Linux systems with NVIDIA GPUs)
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    working_dir: /app
    stdin_open: true
    tty: true
    command: bash

  # Inference service (lightweight)
  # protx-inference:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #     target: inference
  #   container_name: protx-inference
  #   volumes:
  #     - ./output/wandb_checkpoints:/app/models:ro
  #   environment:
  #   ports:
  #     - "8000:8000"  # FastAPI inference server
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: 1
  #             capabilities: [gpu]
  #   working_dir: /app
  #   command: python inference_server.py
